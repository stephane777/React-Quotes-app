{"version":3,"sources":["script/QuoteBox.js","script/App.js","index.js"],"names":["quoteBox","props","react_default","a","createElement","id","className","dangerouslySetInnerHTML","__html","text","author","href","onClick","handleNewQuote","handleTweet","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","isLoaded","quotes","quote","bind","assertThisInitialized","fetchApi","getQuote","_this2","fetch","mode","then","res","json","result","setState","catch","err","Math","floor","random","event","preventDefault","clearContent","content","replace","title","window","open","concat","_this$state","message","script_QuoteBox","React","Component","ReactDOM","render","script_App","document","getElementById"],"mappings":"qPAkBeA,eAfE,SAACC,GACd,OACIC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,YAAYC,UAAU,YAC5BJ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,OAAOE,wBAAyB,CAACC,OAAQP,EAAMQ,QACvDP,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UAAUJ,EAAMS,QACxBR,EAAAC,EAAAC,cAAA,KAAGO,KAAK,QAAQC,QAASX,EAAMY,eAAgBR,GAAG,aAC9CH,EAAAC,EAAAC,cAAA,4BAGJF,EAAAC,EAAAC,cAAA,KAAGO,KAAK,2BAA2BC,QAASX,EAAMa,YAAaT,GAAG,eAChEH,EAAAC,EAAAC,cAAA,2BCoFGW,cA3Fb,SAAAA,EAAYd,GAAO,IAAAe,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMlB,KACDsB,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,OAAQ,GACRC,MAAO,IAETX,EAAKH,eAAiBG,EAAKH,eAAee,KAApBX,OAAAY,EAAA,EAAAZ,CAAAD,IACtBA,EAAKF,YAAcE,EAAKF,YAAYc,KAAjBX,OAAAY,EAAA,EAAAZ,CAAAD,IACnBA,EAAKc,SAAWd,EAAKc,SAASF,KAAdX,OAAAY,EAAA,EAAAZ,CAAAD,IAChBA,EAAKe,SAAWf,EAAKe,SAASH,KAAdX,OAAAY,EAAA,EAAAZ,CAAAD,IAXCA,0EAcR,IAAAgB,EAAAb,KAGTc,MADY,8HACD,CACTC,KAAM,SAELC,KAAK,SAAAC,GACJ,OAAOA,EAAIC,SAEZF,KACC,SAAAG,GACE,IAAMX,EAAQK,EAAKD,SAASO,GAC5BN,EAAKO,SAAS,CACZd,UAAU,EACVC,OAAQY,EACRX,WAGJ,SAAAH,GACEQ,EAAKO,SAAS,CACZf,QACAC,UAAU,MAGde,MAAM,SAAAC,GACNT,EAAKO,SAAS,CAACf,MAAOiB,uCAGnBf,GAGP,OADcA,EADAgB,KAAKC,MAAoB,GAAdD,KAAKE,kDAIjBC,GACbA,EAAMC,iBACN,IAAMpB,EAASP,KAAKI,MAAMG,OACpBC,EAAQR,KAAKY,SAASL,GAC5BP,KAAKoB,SAAS,CACZZ,8CAGQkB,GACVA,EAAMC,iBACN,IACMC,EADU5B,KAAKI,MAAMI,MAAMqB,QAEhCC,QAAQ,WAAW,IACnBA,QAAQ,WAAW,KACdvC,EAASS,KAAKI,MAAMI,MAAMuB,MAC/BC,OAAOC,KAAP,6DAAAC,OAAyEN,GAAzEM,OAAwF3C,gDAIxFS,KAAKW,4CAGC,IAAAwB,EAC4BnC,KAAKI,MAAhCC,EADD8B,EACC9B,MAAOC,EADR6B,EACQ7B,SAAUE,EADlB2B,EACkB3B,MACzB,OAAIH,EACKtB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAf,UAA6BkB,EAAM+B,SAChC9B,EAIRvB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAACoD,EAAD,CACE/C,KAAMkB,EAAMqB,QACZtC,OAAQiB,EAAMuB,MACdrC,eAAgBM,KAAKN,eACrBC,YAAaK,KAAKL,eATjBZ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAf,qBA3EKmD,IAAMC,WCCxBC,IAASC,OAAO1D,EAAAC,EAAAC,cAACyD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.3ce41131.chunk.js","sourcesContent":["import React from 'react'\nimport QuoteBox from '../style/QuoteBox.css'\n\nconst quoteBox = (props) =>{\n    return (\n        <div id=\"quote-box\" className=\"QuoteBox\">\n          <div id=\"text\" dangerouslySetInnerHTML={{__html: props.text}}></div>\n          <div id=\"author\">{props.author}</div>\n          <a href=\"blank\" onClick={props.handleNewQuote} id=\"new-quote\">\n              <button >new Quote</button>\n          </a>\n          {/* <button id=\"new-quote\">new Quote</button> */}\n          <a href=\"twitter.com/intent/tweet\" onClick={props.handleTweet} id=\"tweet-quote\">\n            <button >tweet</button>\n          </a>\n        </div>\n    )\n}\nexport default quoteBox","import React from 'react';\nimport '../style/App.css';\nimport QuoteBox from './QuoteBox'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      error: null,\n      isLoaded: false,\n      quotes: [],\n      quote: {}\n    }\n    this.handleNewQuote = this.handleNewQuote.bind(this)\n    this.handleTweet = this.handleTweet.bind(this)\n    this.fetchApi = this.fetchApi.bind(this)\n    this.getQuote = this.getQuote.bind(this)\n    \n  }\n  fetchApi() {\n    // const num = ~~(Math.random()*100+1)\n    const url = 'https://cors-anywhere.herokuapp.com/https://quotesondesign.com/wp-json/posts?filter[orderby]=rand&filter[posts_per_page]=40';\n    fetch(url, {\n      mode: 'cors'\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(\n        result => {\n          const quote = this.getQuote(result)\n          this.setState({\n            isLoaded: true,\n            quotes: result,\n            quote\n          })\n        },\n        error => {\n          this.setState({\n            error,\n            isLoaded: false\n          })\n        }\n      ).catch(err => {\n        this.setState({error: err})\n      })\n  }\n  getQuote(quotes){\n    const index = Math.floor(Math.random()*40)\n    const quote = quotes[index]\n    return quote\n  }\n  handleNewQuote(event){\n    event.preventDefault();\n    const quotes = this.state.quotes\n    const quote = this.getQuote(quotes)\n    this.setState({\n      quote\n    })\n  }\n  handleTweet(event){\n    event.preventDefault();\n    const content = this.state.quote.content\n    const clearContent = content\n    .replace(/<\\/?p>/gm,'')\n    .replace(/&#8217;/g,'\\'')\n    const author = this.state.quote.title\n     window.open(`https://www.twitter.com/intent/tweet?hashtags=Quotes&text=${clearContent}${author}`)\n    //  window.open(`https://www.twitter.com/intent/tweet?hashtags=Quotes&text=\"${this.state.quote.content}\"\"${this.state.quote.title}`);\n  }\n  componentDidMount() {\n     this.fetchApi()\n  }\n\n  render() {\n    const { error, isLoaded, quote } = this.state;\n    if (error) {\n      return <div className=\"App\">Error: {error.message}</div>\n    } else if (!isLoaded) {\n      return <div className=\"App\">Loading...</div>\n    } else {\n      return (\n        <div className=\"App\">\n          <h1>Quotes generator</h1>\n          <QuoteBox\n            text={quote.content}\n            author={quote.title}\n            handleNewQuote={this.handleNewQuote}\n            handleTweet={this.handleTweet}/>\n        </div>\n      );\n    }\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './script/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}